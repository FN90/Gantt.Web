@model Gantt.Web.DAL.Task
@using Gantt.Web.Models;

@{
	ViewBag.Title = "Créer une tâche";
	List<Projet> Projects = ViewBag.Projects;
}
<div class="col-md-6">

	<h4>Créer une tâche</h4>

	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

<div>

	<hr />
	@Html.ValidationSummary(true)
	<h4>
		Projet
	</h4>
	<div class="form-group">
		<label class="control-label" for="ParentId">Sélectionnez le composant d'un projet</label>
		<select class="form-control" name="ParentId" id="ParentId">
			<option value="">Sélectionner...</option>
			@foreach (var project in Projects)
			{
				<optgroup label="@project.Text">
					@foreach (var item in project.Composants)
					{
						<option value="@item.Id" data-hastasks="@(item.Tasks.Count() > 0 ? "true":"false")">@item.Text</option>
					}
				</optgroup>
			}

		</select>
		@Html.ValidationMessageFor(model => model.ParentId)
	</div>
	<input type="hidden" name="PredecessorId" id="PredecessorValueId" />
	<script>
		var composantIds = [];
	</script>

	@foreach (var project in Projects)
	{

		if (project.Composants.Count() > 0)
		{
			<div class="form-group" id="projectTasks@(project.Id)">
				@foreach (var composant in project.Composants)
				{
					<script>
									composantIds.push(@composant.Id);
					</script>
					if (composant.Tasks.Count() > 0)
					{
						<div class="form-group" id="projectComposants@(composant.Id)" style="display: none">
							<hr />
							<h4>
								Tâche précédente
							</h4>
							<label class="control-label" for="ParentId">@project.Text</label>
							<select class="form-control predecessorSelect" id="PredecessorId">
								<option value="">Sélectionner...</option>
								@foreach (var item in composant.Tasks)
								{
									<option value="@item.Id" data-date="@item.StartDate" data-duration="@item.Duration">
										@item.Text : @item.StartDate.ToString("dd/MM/yyyy") (Durée: @item.Duration)
									</option>
								}
							</select>
							@Html.ValidationMessageFor(model => model.ParentId)
						</div>
					}
					else
					{
						<div class="form-group" id="projectComposants@(composant.Id)" style="display: none">
							<hr />
							<h4>
								Tâche précédente
							</h4>
							<div class="alert alert-warning">
								Il s'agit de la première tâche du projet, vous ne pouvez pas spécifier de prédécesseur.
							</div>
						</div>
					}
				}
			</div>
		}
		else
		{

		}
	}
	<hr />
	<h4>
		Infos sur la tâche
	</h4>
	<div class="form-group">
		<label class="control-label" for="Text">Titre</label>
		<input class="form-control" id="Text" name="Text" type="text" value="" placeholder="Entrez le titre de la tâche ...">
		@Html.ValidationMessageFor(model => model.Text)

	</div>

	<div class="form-group">
		<div class="row">
			<div class="col-md-6">
				<label class="control-label" for="StartDate">
					Date de départ (Mois/Jour/Année)
				</label>
				@*<input class="form-control" data-val="true" data-val-date="The field Start Date must be a date." data-val-required="The StartDate field is required." id="StartDate" name="StartDate" type="datetime" value="">*@

				<div class="input-group date" id="datetimepicker1" data-target-input="nearest">
					<input type="text" class="form-control datetimepicker-input" name="StartDate" id="StartDate" data-target="#datetimepicker1" data-toggle="datetimepicker" />
					<div class="input-group-append" data-target="#datetimepicker1" data-toggle="datetimepicker">
						<div class="input-group-text"><i class="fa fa-calendar"></i></div>
					</div>
				</div>

				@Html.ValidationMessageFor(model => model.StartDate)
			</div>
			<div class="col-md-6">
				<label class="control-label" for="Duration">Durée (minute)</label>
				<input class="form-control" data-val="true" data-val-number="The field Duration must be a number." data-val-required="The Duration field is required." id="Duration" name="Duration" type="number" value="">
				@Html.ValidationMessageFor(model => model.Duration)
			</div>

		</div>
	</div>

	@*<div class="form-group">
			<label class="control-label" for="Duration">Duration</label>
			<input class="form-control" data-val="true" data-val-number="The field Duration must be a number." data-val-required="The Duration field is required." id="Duration" name="Duration" type="number" value="">
			@Html.ValidationMessageFor(model => model.Duration)

		</div>*@

	@*<div class="form-group">
			@Html.LabelFor(model => model.Progress, htmlAttributes: new { @class = "control-label" })
			<input class="form-control" data-val="true" data-val-number="The field Progress must be a number." data-val-required="The Progress field is required." id="Progress" name="Progress" type="text" value="">
			@Html.ValidationMessageFor(model => model.Progress)
		</div>*@

	<div class="form-group">
		<div class="row">
			<div class="col-md-6">
				<label class="control-label" for="Duration">Centre de charge</label>
				<input class="form-control" type="text" name="CentreCharge" id="CentreCharge">
				<span class="field-validation-valid" data-valmsg-for="Duration" data-valmsg-replace="true"></span>
			</div>
			<div class="col-md-6">
				<label class="control-label" for="Duration">Employe</label>
				<input class="form-control" type="text" id="Employe" name="Employe" value="">
				<span class="field-validation-valid" data-valmsg-for="Employe" data-valmsg-replace="true"></span>
			</div>
		</div>
	</div>
	<hr />
	<div class="form-group">
		<input type="submit" value="Créer" class="btn btn-primary" />
	</div>
</div>

	}

	@*<div>
			@Html.ActionLink("Back to List", "Index")
		</div>*@
</div>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>

<script>
	$(document).ready(function () {
		$('#datetimepicker1').datetimepicker({
			//minDate: new Date(),
			//format: 'L'
		});
		var options = { year: 'numeric', month: 'numeric', day: 'numeric', minute: 'numeric', hour: 'numeric' };

		$('#ParentId').on('change', function () {
			for (i = 0; i < composantIds.length; i++) {
				$('#projectComposants' + composantIds[i]).hide();
			}
			$('#projectComposants' + $(this).val()).show();
			var projectHasTasks = $(this).find(':selected').data('hastasks');
			console.log('projectHasTasks:' + projectHasTasks)
			if (projectHasTasks) {
				$('#StartDate').prop('readonly', true);
			} else {
				$('#StartDate').prop('readonly', false);
			}
		});

		$('.predecessorSelect').on('change', function () {
			var startDate = new Date($(this).children('option:selected').data('date'));
			var duration = parseInt($(this).children('option:selected').data('duration'));
			var newStartDate = new Date();
			// set the value of the hidden input to be sent to the backend
			$('#PredecessorValueId').val($(this).val());
			newStartDate = startDate.addMinutes(duration);
			console.log('startDate:' + startDate);
			console.log('duration:' + duration);
			console.log('newStartDate:' + newStartDate);
			$('#StartDate').val(newStartDate.toLocaleDateString("en-US", options));
		});

		Date.prototype.addMinutes = function (minutes) {
			var date = new Date(this.valueOf());
			date.setMinutes(date.getMinutes() + minutes);
			return date;
		}


	});
</script>
